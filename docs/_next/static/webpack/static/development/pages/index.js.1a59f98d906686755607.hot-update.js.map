{"version":3,"file":"static/webpack/static/development/pages/index.js.1a59f98d906686755607.hot-update.js","sources":["webpack:///./components/result.js"],"sourcesContent":["import React from \"react\";\n\nimport axios from 'axios';\nimport { TwitterPicker } from 'react-color';\nimport { scroller } from 'react-scroll';\n\nconst errormsg = 'Error: 404 Invalid URL';\n\nclass Result extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      bg: '#E1E8ED',\n      isDiff: false, // is the image different from the preview\n      first: true // is this the first image to be generated\n    }\n\n\n    this.handleColorChange = this.handleColorChange.bind(this);\n    this.genCanvas = this.genCanvas.bind(this);\n    this.imgClick = this.imgClick.bind(this);\n    this.refresh = this.refresh.bind(this);\n\n  }\n\n  genCanvas(){\n    const html2canvas = require('html2canvas');\n    // window.scrollTo(0,0)\n    html2canvas(document.querySelector(\"#preview .tweet-container\"), {allowTaint: true, useCORS: true})\n    .then((canvas) => {\n\n      canvas.className = 'tweet-container-container';\n      let img = document.createElement('img');\n      img.src = canvas.toDataURL();\n\n      if (this.state.first){\n        let div = document.querySelector('#canvas .tweet-container-container');\n        div.parentNode.replaceChild(img, div);\n      } else {\n        let old = document.querySelector('#canvas > img');\n\n        old.parentNode.replaceChild(img, old);\n      }\n\n    })\n    .then(() => {\n      if (this.state.first){\n        this.setState({\n          first: false\n        });\n      }\n    });\n\n    scroller.scrollTo('canvas')\n\n  }\n\n  imgClick(){\n    this.genCanvas()\n  }\n\n  refresh(){\n    this.setState({\n      isDiff: false\n    });\n    this.genCanvas();\n  }\n\n  handleColorChange(color, event){\n    if (this.state.first){\n      this.setState({\n        bg: color.hex\n      });\n    } else {\n      this.setState({\n        bg: color.hex,\n        isDiff: true\n      });\n    }\n\n    let v = document.querySelector('.twitter-picker input');\n    v.value = String(color.hex).toUpperCase().replace('#','');\n\n  }\n\n  componentDidMount() {\n    if (this.props.tweet !== errormsg){\n      let v = document.querySelector('.twitter-picker input');\n      v.value = String(this.state.bg).toUpperCase().replace('#','');\n    }\n\n    scroller.scrollTo('result-wrapper', {\n      smooth: true,\n    })\n  }\n\n  render(){\n    console.log('render');\n\n    let bgStyle = {backgroundColor: this.state.bg}\n\n    // console.log(this.props.tweet);\n    if (this.props.tweet === errormsg){\n      return <p>{errormsg}</p>\n    }\n    return (\n      <>\n        <div id='result'>\n\n          <div id='preview'>\n            <h3>Preview</h3>\n            <div className='tweet-container-container'>\n              <div className='tweet-container' style={bgStyle}>\n                <div id='tweet' dangerouslySetInnerHTML={{__html: this.props.tweet}}>\n\n                </div>\n              </div>\n            </div>\n\n            <TwitterPicker\n              triangle='hide'\n              onChangeComplete={this.handleColorChange}\n              colors={['#E1E8ED', '#EB144C', '#FF8B00', '#ffd000', '#00D036', '#1DA1F2', '#ff40cf', '#7900f2']}/>\n\n          </div>\n\n          <div id='canvas'>\n            <div id='canvas-bar'>\n              <h3>Image</h3>\n              <button id='refresh' onClick={this.refresh} disabled={!this.state.isDiff || this.state.first}>\n                <span className='icon'>&#8635;</span> Refresh\n              </button>\n            </div>\n            <div className='tweet-container-container'>\n              <div className='tweet-container'>\n                <button onClick={this.imgClick}>Create Image</button>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </>\n    );\n  }\n}\n\n\n\nexport default Result;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAbA;AAeA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AAEA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAzIA;AACA;AA6IA;;;;A","sourceRoot":""}