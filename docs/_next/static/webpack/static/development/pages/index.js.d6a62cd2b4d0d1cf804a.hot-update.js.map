{"version":3,"file":"static/webpack/static/development/pages/index.js.d6a62cd2b4d0d1cf804a.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport Head from 'next/head';\nimport { scroller } from 'react-scroll';\nconst getTweet = require(\"../scraper-client.js\");\n// import SEO from \"../components/seo\"\nimport Result from '../components/result';\nimport Arrow from '../components/arrow.js';\nimport '../scss/index.scss';\n\nconst errormsg = 'Error: 404 Invalid URL';\nconst ASSET_PREFIX = '/tweet-img';\n\nclass IndexPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        loading: false,\n        blank: true,\n        tweet: '',\n        error: false\n    };\n\n    this.result = React.createRef();\n    this.urlInput = React.createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  createTweet(url){\n    console.log('axios');\n\n    this.setState({\n      loading: true\n    })\n    console.log('loading')\n\n    // SERVER-SIDE\n    // axios.post('/api', {\n    //   url: url\n    // })\n    axios.post('https://us-central1-tweet-img.cloudfunctions.net/scraper', {\n      url: url\n    })\n    .then(response => {\n      console.log('response')\n      // console.log(response)\n\n      this.setState({\n        tweet: response.data,\n        loading: false\n      });\n\n      console.log('not loading')\n\n    })\n    .catch(error => {\n\n      this.setState({\n        tweet: errormsg,\n        loading: false\n      });\n\n      console.log('not loading')\n    })\n\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    console.log('Submitted');\n\n    const validatedUrl = this.validate(this.urlInput.current.value);\n    if (validatedUrl == 0){\n      this.setState({\n        blank: true,\n        error: true\n      });\n    } else {\n      this.setState({\n          blank: false,\n          error: false\n      }, () => {\n        this.createTweet(validatedUrl);\n      });\n    }\n\n  }\n\n  validate(urlInput){\n    const regexMobile = /(https:\\/\\/)?mobile.twitter.com\\/([a-z]|[A-Z]|\\d|_){0,15}\\/status\\/\\d{19}/g\n    const regexGen = /(https:\\/\\/)?(www)?twitter.com\\/([a-z]|[A-Z]|\\d|_){0,15}\\/status\\/\\d{19}/g\n\n    let newInput;\n    const mobile = regexMobile.exec(urlInput);\n    if (mobile) {\n      newInput = urlInput.replace('mobile', 'www');\n    } else {\n      const valid = regexGen.exec(urlInput);\n\n      if(valid){\n        newInput = urlInput;\n      } else {\n        newInput = 0;\n      }\n    }\n\n    return newInput;\n\n  }\n\n  componentDidMount(){\n    // console.log('scroll?');\n    // scroller.scrollTo('result-wrapper', {\n    //   smooth: true,\n    // })\n  }\n\n\n  render(){\n    var res;\n    if (this.state.blank){\n      res = null;\n    } else if (this.state.loading){\n      res = <p>Loading...</p>;\n    } else {\n      res = <Result blank={this.state.blank} tweet={this.state.tweet}/>;\n    }\n\n    return (\n      <>\n        <Head>\n          <title>tweet-img</title>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" key=\"viewport\"/>\n          <meta name=\"description\" content=\"Generate image from tweets\"/>\n          <meta name=\"keywords\" content=\"Twitter,Image,Background,Tweet,Instagram,Social,Media\"/>\n          <meta name=\"author\" content=\"Matias Huapaya\"/>\n          <link rel=\"shortcut icon\" href={ASSET_PREFIX + \"/logo-bgwhite.png\"} />\n          <meta property=\"og:title\" content=\"tweet-img\"/>\n          <meta property=\"og:description\" content=\"Offering tour packages for individuals or groups.\"/>\n          <meta property=\"og:image\" content=\"https://mhuap.github.io/tweet-img/example.png\"/>\n          <meta property=\"og:url\" content=\"https://mhuap.github.io/tweet-img\"/>\n          <meta property=\"og:site_name\" content=\"tweet-img\"/>\n          <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n        </Head>\n\n        <div id='container'>\n          <div id='form-wrapper'>\n            <h1>tweet-img</h1>\n            <p id='support'>Only tested on some tweets. <a target='__blank' href='https://github.com/mhuap/tweet-img/blob/master/README.md#tweet-support'>See what kinds of tweets we support.</a></p>\n            <form id='top-form' onSubmit={this.handleSubmit}>\n              <label>Enter Tweet URL</label>\n              <div id='form-input' className={this.state.error ? 'error' : ''}>\n                <input id='url-input'type='text' ref={this.urlInput} name='url' placeholder='twitter.com/status/tweeturl'/>\n                <button><Arrow/></button>\n              </div>\n              {this.state.error ? <p id='error'>Not a tweet URL</p> : null}\n            </form>\n          </div>\n\n          <div id='result-wrapper' ref={this.result}>\n            {res}\n          </div>\n\n        </div>\n        <footer>\n          Created by <a href='https://twitter.com/matias_huapaya'>Matias Huapaya</a>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default IndexPage\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAZA;AAaA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AAGA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAhKA;AACA;AAkKA;;;;A","sourceRoot":""}