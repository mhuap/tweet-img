{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from 'axios'; // import { useRouter } from 'next/router'\n// import SEO from \"../components/seo\"\n\nimport '../scss/index.scss'; // import logosrc from '../images/Twitter_Logo_Blue.svg'\n\nclass IndexPage extends React.Component {\n  // const router = useRouter()\n  // const { tweeturl } = router.query\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({\n      url: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault(); //making a post request with the fetch API\n\n    axios.post('/api', {\n      url: this.state.url\n    }).then(response => {\n      // console.log(response.data)\n      const div = document.getElementById('tweet');\n      div.innerHTML = response.data;\n      let logo = document.createElement('img');\n      logo.id = 'logo';\n      logo.src = '/Twitter_Logo_Blue.png';\n      document.getElementById('tweet').appendChild(logo);\n      let ver = document.querySelector('.u-hiddenVisually');\n\n      if (ver) {\n        let badge = document.createElement('img');\n        badge.id = 'badge';\n        badge.src = '/verified.png';\n        ver.parentNode.replaceChild(badge, ver);\n      } // this.genCanvas()\n\n    }).catch(error => console.log(error));\n  }\n\n  genCanvas() {\n    const html2canvas = require('html2canvas');\n\n    html2canvas(document.querySelector(\"#tweet-container\"), {\n      allowTaint: true\n    }).then(function (canvas) {\n      // document.querySelector('#container').appendChild(canvas);\n      let tweetContainer = document.getElementById('tweet-container-container');\n      tweetContainer.parentNode.replaceChild(canvas, tweetContainer);\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"container\"\n    }, __jsx(\"h1\", null, \"tweet-img\"), __jsx(\"form\", {\n      onSubmit: this.handleSubmit\n    }, __jsx(\"label\", null, \"Tweet URL\"), __jsx(\"input\", {\n      id: \"url-input\",\n      type: \"text\",\n      onChange: this.handleChange,\n      name: \"url\",\n      placeholder: \"twitter.com/status/tweeturl\"\n    }), __jsx(\"button\", null, \"Submit\")), __jsx(\"div\", {\n      id: \"tweet-container-container\"\n    }, __jsx(\"div\", {\n      id: \"tweet-container\"\n    }, __jsx(\"div\", {\n      id: \"tweet\"\n    }))), __jsx(\"button\", {\n      onClick: this.genCanvas\n    }, \"Generate Image\"));\n  }\n\n} // IndexPage.getInitialProps = async ({ req }) => {\n//   const res = await axios.post('/');\n//   const json = await res.json();\n//   return { tweeturl: json.url };\n// }\n\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/Matias/Documents/ImageTweet/tweet-img/pages/index.js"],"names":["React","axios","IndexPage","Component","constructor","props","state","url","handleChange","bind","handleSubmit","e","preventDefault","setState","target","value","post","then","response","div","document","getElementById","innerHTML","data","logo","createElement","id","src","appendChild","ver","querySelector","badge","parentNode","replaceChild","catch","error","console","log","genCanvas","html2canvas","require","allowTaint","canvas","tweetContainer","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAO,oBAAP,C,CACA;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtC;AACA;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE;AADI,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,CAAD,EAAG;AACbA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKC,QAAL,CAAc;AACVN,MAAAA,GAAG,EAAEI,CAAC,CAACG,MAAF,CAASC;AADJ,KAAd;AAGD;;AAEDL,EAAAA,YAAY,CAACC,CAAD,EAAG;AACbA,IAAAA,CAAC,CAACC,cAAF,GADa,CAEb;;AACAX,IAAAA,KAAK,CAACe,IAAN,CAAW,MAAX,EAAmB;AACjBT,MAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC;AADC,KAAnB,EAGCU,IAHD,CAGMC,QAAQ,IAAI;AAChB;AACA,YAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACAF,MAAAA,GAAG,CAACG,SAAJ,GAAgBJ,QAAQ,CAACK,IAAzB;AAEA,UAAIC,IAAI,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAX;AACAD,MAAAA,IAAI,CAACE,EAAL,GAAU,MAAV;AACAF,MAAAA,IAAI,CAACG,GAAL,GAAW,wBAAX;AACAP,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCO,WAAjC,CAA6CJ,IAA7C;AAEA,UAAIK,GAAG,GAAGT,QAAQ,CAACU,aAAT,CAAuB,mBAAvB,CAAV;;AACA,UAAID,GAAJ,EAAQ;AACN,YAAIE,KAAK,GAAGX,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAZ;AACAM,QAAAA,KAAK,CAACL,EAAN,GAAW,OAAX;AACAK,QAAAA,KAAK,CAACJ,GAAN,GAAY,eAAZ;AACAE,QAAAA,GAAG,CAACG,UAAJ,CAAeC,YAAf,CAA4BF,KAA5B,EAAmCF,GAAnC;AACD,OAhBe,CAiBhB;;AACD,KArBD,EAsBCK,KAtBD,CAsBOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAtBhB;AAuBD;;AAEDG,EAAAA,SAAS,GAAE;AACT,UAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AACAD,IAAAA,WAAW,CAACnB,QAAQ,CAACU,aAAT,CAAuB,kBAAvB,CAAD,EAA6C;AAACW,MAAAA,UAAU,EAAE;AAAb,KAA7C,CAAX,CAA4ExB,IAA5E,CAAiF,UAASyB,MAAT,EAAiB;AAChG;AACA,UAAIC,cAAc,GAAGvB,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,CAArB;AACAsB,MAAAA,cAAc,CAACX,UAAf,CAA0BC,YAA1B,CAAuCS,MAAvC,EAA+CC,cAA/C;AACD,KAJD;AAKD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,EAAE,EAAC;AAAR,OACE,8BADF,EAEE;AAAM,MAAA,QAAQ,EAAE,KAAKlC;AAArB,OACE,iCADF,EAEE;AAAO,MAAA,EAAE,EAAC,WAAV;AAAqB,MAAA,IAAI,EAAC,MAA1B;AAAiC,MAAA,QAAQ,EAAE,KAAKF,YAAhD;AAA8D,MAAA,IAAI,EAAC,KAAnE;AAAyE,MAAA,WAAW,EAAC;AAArF,MAFF,EAGE,+BAHF,CAFF,EAQE;AAAK,MAAA,EAAE,EAAC;AAAR,OACE;AAAK,MAAA,EAAE,EAAC;AAAR,OACE;AAAK,MAAA,EAAE,EAAC;AAAR,MADF,CADF,CARF,EAcE;AAAQ,MAAA,OAAO,EAAE,KAAK8B;AAAtB,wBAdF,CADF;AAmBD;;AA7EqC,C,CAgFxC;AACA;AACA;AACA;AACA;;;AAEA,eAAepC,SAAf","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\n// import { useRouter } from 'next/router'\n// import SEO from \"../components/seo\"\nimport '../scss/index.scss';\n// import logosrc from '../images/Twitter_Logo_Blue.svg'\n\n\nclass IndexPage extends React.Component {\n  // const router = useRouter()\n  // const { tweeturl } = router.query\n  constructor(props) {\n    super(props);\n    this.state = {\n        url: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e){\n    e.preventDefault();\n    this.setState({\n        url: e.target.value,\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    //making a post request with the fetch API\n    axios.post('/api', {\n      url: this.state.url\n    })\n    .then(response => {\n      // console.log(response.data)\n      const div = document.getElementById('tweet');\n      div.innerHTML = response.data;\n\n      let logo = document.createElement('img');\n      logo.id = 'logo';\n      logo.src = '/Twitter_Logo_Blue.png';\n      document.getElementById('tweet').appendChild(logo);\n\n      let ver = document.querySelector('.u-hiddenVisually');\n      if (ver){\n        let badge = document.createElement('img');\n        badge.id = 'badge';\n        badge.src = '/verified.png';\n        ver.parentNode.replaceChild(badge, ver);\n      }\n      // this.genCanvas()\n    })\n    .catch(error => console.log(error))\n  }\n\n  genCanvas(){\n    const html2canvas = require('html2canvas');\n    html2canvas(document.querySelector(\"#tweet-container\"), {allowTaint: true}).then(function(canvas) {\n      // document.querySelector('#container').appendChild(canvas);\n      let tweetContainer = document.getElementById('tweet-container-container');\n      tweetContainer.parentNode.replaceChild(canvas, tweetContainer);\n    });\n  }\n\n  render(){\n    return (\n      <div id='container'>\n        <h1>tweet-img</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>Tweet URL</label>\n          <input id='url-input'type='text' onChange={this.handleChange} name='url' placeholder='twitter.com/status/tweeturl'/>\n          <button>Submit</button>\n        </form>\n\n        <div id='tweet-container-container'>\n          <div id='tweet-container'>\n            <div id='tweet'></div>\n          </div>\n        </div>\n\n        <button onClick={this.genCanvas}>Generate Image</button>\n\n      </div>\n    );\n  }\n}\n\n// IndexPage.getInitialProps = async ({ req }) => {\n//   const res = await axios.post('/');\n//   const json = await res.json();\n//   return { tweeturl: json.url };\n// }\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}