{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from 'axios'; // import { useRouter } from 'next/router'\n// import SEO from \"../components/seo\"\n\nimport '../scss/index.scss';\nimport '../scss/tweet.scss';\n\nvar IndexPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IndexPage, _React$Component);\n\n  // const router = useRouter()\n  // const { tweeturl } = router.query\n  function IndexPage(props) {\n    var _this;\n\n    _classCallCheck(this, IndexPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IndexPage).call(this, props));\n    _this.state = {\n      url: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(IndexPage, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      e.preventDefault();\n      this.setState({\n        url: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault(); //making a post request with the fetch API\n\n      axios.post('/api', {\n        url: this.state.url\n      }).then(function (response) {\n        // console.log(response.data)\n        var div = document.getElementById('tweet');\n        div.innerHTML = response.data;\n\n        _this2.genCanvas();\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"genCanvas\",\n    value: function genCanvas() {\n      var html2canvas = require('html2canvas');\n\n      html2canvas(document.querySelector(\"#tweet\"), {\n        allowTaint: true\n      }).then(function (canvas) {\n        // document.querySelector('#container').appendChild(canvas);\n        var tweetContainer = document.getElementById('tweet-container-container');\n        tweetContainer.parentNode.replaceChild(canvas, tweetContainer);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"container\"\n      }, __jsx(\"h1\", null, \"tweet-img\"), __jsx(\"form\", {\n        onSubmit: this.handleSubmit\n      }, __jsx(\"label\", null, \"Tweet URL\"), __jsx(\"input\", {\n        id: \"url-input\",\n        type: \"text\",\n        onChange: this.handleChange,\n        name: \"url\",\n        placeholder: \"twitter.com/tweeturl\"\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      })), __jsx(\"div\", {\n        id: \"tweet-container-container\"\n      }, __jsx(\"div\", {\n        id: \"tweet-container\"\n      }, __jsx(\"div\", {\n        id: \"tweet\"\n      }))));\n    }\n  }]);\n\n  return IndexPage;\n}(React.Component); // IndexPage.getInitialProps = async ({ req }) => {\n//   const res = await axios.post('/');\n//   const json = await res.json();\n//   return { tweeturl: json.url };\n// }\n\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/Matias/Documents/ImageTweet/tweet-img/pages/index.js"],"names":["React","axios","IndexPage","props","state","url","handleChange","bind","handleSubmit","e","preventDefault","setState","target","value","post","then","response","div","document","getElementById","innerHTML","data","genCanvas","error","console","log","html2canvas","require","querySelector","allowTaint","canvas","tweetContainer","parentNode","replaceChild","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;;IAGMC,S;;;;;AACJ;AACA;AACA,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE;AADI,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AAPiB;AAQlB;;;;iCAEYE,C,EAAE;AACbA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVN,QAAAA,GAAG,EAAEI,CAAC,CAACG,MAAF,CAASC;AADJ,OAAd;AAGD;;;iCAEYJ,C,EAAE;AAAA;;AACbA,MAAAA,CAAC,CAACC,cAAF,GADa,CAEb;;AACAT,MAAAA,KAAK,CAACa,IAAN,CAAW,MAAX,EAAmB;AACjBT,QAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC;AADC,OAAnB,EAGCU,IAHD,CAGM,UAAAC,QAAQ,EAAI;AAChB;AACA,YAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACAF,QAAAA,GAAG,CAACG,SAAJ,GAAgBJ,QAAQ,CAACK,IAAzB;;AACA,QAAA,MAAI,CAACC,SAAL;AACD,OARD,WASO,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,OATZ;AAUD;;;gCAEU;AACT,UAAMG,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AACAD,MAAAA,WAAW,CAACR,QAAQ,CAACU,aAAT,CAAuB,QAAvB,CAAD,EAAmC;AAACC,QAAAA,UAAU,EAAE;AAAb,OAAnC,CAAX,CAAkEd,IAAlE,CAAuE,UAASe,MAAT,EAAiB;AACtF;AACA,YAAIC,cAAc,GAAGb,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,CAArB;AACAY,QAAAA,cAAc,CAACC,UAAf,CAA0BC,YAA1B,CAAuCH,MAAvC,EAA+CC,cAA/C;AACD,OAJD;AAKD;;;6BAEO;AACN,aACE;AAAK,QAAA,EAAE,EAAC;AAAR,SACE,8BADF,EAEE;AAAM,QAAA,QAAQ,EAAE,KAAKvB;AAArB,SACE,iCADF,EAEE;AAAO,QAAA,EAAE,EAAC,WAAV;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAiC,QAAA,QAAQ,EAAE,KAAKF,YAAhD;AAA8D,QAAA,IAAI,EAAC,KAAnE;AAAyE,QAAA,WAAW,EAAC;AAArF,QAFF,EAGE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B,QAHF,CAFF,EAQE;AAAK,QAAA,EAAE,EAAC;AAAR,SACE;AAAK,QAAA,EAAE,EAAC;AAAR,SACE;AAAK,QAAA,EAAE,EAAC;AAAR,QADF,CADF,CARF,CADF;AAiBD;;;;EA9DqBN,KAAK,CAACkC,S,GAiE9B;AACA;AACA;AACA;AACA;;;AAEA,eAAehC,SAAf","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\n// import { useRouter } from 'next/router'\n// import SEO from \"../components/seo\"\nimport '../scss/index.scss';\nimport '../scss/tweet.scss';\n\n\nclass IndexPage extends React.Component {\n  // const router = useRouter()\n  // const { tweeturl } = router.query\n  constructor(props) {\n    super(props);\n    this.state = {\n        url: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e){\n    e.preventDefault();\n    this.setState({\n        url: e.target.value,\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    //making a post request with the fetch API\n    axios.post('/api', {\n      url: this.state.url\n    })\n    .then(response => {\n      // console.log(response.data)\n      const div = document.getElementById('tweet');\n      div.innerHTML = response.data;\n      this.genCanvas()\n    })\n    .catch(error => console.log(error))\n  }\n\n  genCanvas(){\n    const html2canvas = require('html2canvas');\n    html2canvas(document.querySelector(\"#tweet\"), {allowTaint: true}).then(function(canvas) {\n      // document.querySelector('#container').appendChild(canvas);\n      let tweetContainer = document.getElementById('tweet-container-container');\n      tweetContainer.parentNode.replaceChild(canvas, tweetContainer);\n    });\n  }\n\n  render(){\n    return (\n      <div id='container'>\n        <h1>tweet-img</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>Tweet URL</label>\n          <input id='url-input'type='text' onChange={this.handleChange} name='url' placeholder='twitter.com/tweeturl'/>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n\n        <div id='tweet-container-container'>\n          <div id='tweet-container'>\n            <div id='tweet'></div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n// IndexPage.getInitialProps = async ({ req }) => {\n//   const res = await axios.post('/');\n//   const json = await res.json();\n//   return { tweeturl: json.url };\n// }\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}